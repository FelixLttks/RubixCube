Rotate.Cube -> front = white
Rotate.Cube -> top = red

//white edges
For each (edge.color = {X, white}, order = {red,green,orange,blue}):

    //white edge at yellow
    if (edge.pos = {yellow, A}):
        Rotate.yellow -> edge.pos = {yellow, X}
        If (edge.color.X.pos = color.X.pos):
            Rotate.X: 2
        Else:
            Rotate.yellow: -1
            Rotate.X+1: -1
            Rotate.X: 1
            Rotate.X+1: 1

    //white edge at white
    Else if (edge.pos = {white, A}):
        If (edge.color.white.pos = color.white.pos):
            Rotate.white -> edge.color.X = color.X
            Rotate.X: 1
            Rotate.reverseStep: -2
            Rotate.X: -1
        else:
            Rotate.(edge.color.white.pos): 2
            //white edge is at yellow
            Rotate.yellow -> edge.pos = {yellow, X}
            Rotate.yellow: -1
            Rotate.X+1: -1
            Rotate.X: 1
            Rotate.X+1: 1

    //white edge in middle
    else:
        Rotate.(edge.color.X.pos) -> edge.pos = {yellow, edge.color.X.pos}
        Rotate.yellow: 1
        Rotate.reverseStep: -2
        Rotate.yellow -> edge.pos = {yellow, X}
        Rotate.X: 2

Rotate.Cube -> front = red
Rotate.Cube -> top = yellow

//white corners
for each(corner.color = {X,Y,white}, order = {red,green,orange,blue}):

    //white corner at yellow
    if(corner.pos = {yellow, A, B}):
        rotate.yellow -> corner.pos = {yellow, X, Y}
        repeatUntil(corner.pos = {white, X, Y} & corner.color.white.pos = color.white.pos):
            rotate.(corner.color.X + 1): 1
            rotate.yellow: 1
            rotate.(corner.color.X + 1): -1
            rotate.yellow: -1
    
    //white corner at white 
    else:
        rotate.(corner.pos.!=white[0-2]): -1
        rotate.yellow: 1
        rotate.reverseStep: -2
        rotate.yellow -> corner.pos = {yellow, X, Y}
        repeatUntil(corner.pos = {white, X, Y} & corner.color.white.pos = color.white.pos):
            rotate.(corner.color.X + 1): 1
            rotate.yellow: 1
            rotate.(corner.color.X + 1): -1
            rotate.yellow: -1

//middle edges
for each(edge.color = {X, Y}, order = {red,green,orange,blue}):

    //edges at yellow
    if(edge.pos = {yellow, A}):
        rotate.yellow -> edge.pos = {yellow, X}
        if (edge.color.X.pos = color.X.pos):
            rotate.yellow: 1
            rotate.(X + 1): 1
            rotate.yellow: -1
            rotate.(X + 1): -1
            rotate.yellow: -1
            rotate.X: -1
            rotate.yellow: 1
            rotate.X: 1
        else:
            rotate.yellow: 2
            rotate.X: -1
            rotate.yellow: 1
            rotate.X: 1
            rotate.yellow: 1
            rotate.(X + 1): 1
            rotate.yellow: -1
            rotate.(X + 1): -1
    
    //edge in middle
    else:
        pos = edge.color.X.pos
        rotate.(edge.color.X.pos): -1
        rotate.yellow: -1
        rotate.reverseStep: -2
        rotate.yellow: 1
        rotate.(pos + 1): 1
        rotate.yellow: 1
        rotate.(pos + 1): -1
        //edge at yellow
        rotate.yellow -> edge.pos = {yellow, X}
        rotate.yellow: 1
        rotate.(X + 1): 1
        rotate.yellow: -1
        rotate.(X + 1): -1
        rotate.yellow: -1
        rotate.X: -1
        rotate.yellow: 1
        rotate.X: 1

//yellow edges
//facing up
repeatUntil(
    for each(edge.color = {yellow, X}):
        edge.color.yellow.pos = color.yellow.pos
    ):
        if(cube.front.edges.top.color.yellow.pos != color.yellow.pos & cube.left.edges.top.color.yellow.pos = color.yellow.pos):
            rotate.front: 1
            rotate.right: 1
            rotate.yellow: 1
            rotate.right: -1
            rotate.yellow: -1
            rotate.front: -1
        else if(
            for each(edge.color = {yellow, X}):
                edge.color.yellow.pos != color.yellow.pos
        ):
            rotate.front: 1
            rotate.right: 1
            rotate.yellow: 1
            rotate.right: -1
            rotate.yellow: -1
            rotate.front: -1
        else:
            rotate.yellow: 1
)
//switch
//red
rotate.yellow -> color.red.edges.yellow.pos = {yellow, red}
//blue
if(color.blue.edges.yellow.pos != color.blue.pos):
    rotate.yellow: 2
    if(color.blue.edges.yellow.pos = color.blue.pos):
        rotate.right: 1
        rotate.yellow: 1
        rotate.right: -1
        rotate.yellow: 1
        rotate.right: 1
        rotate.yellow: 2
        rotate.right: -1
        rotate.yellow: 2
        
        rotate.right: 1
        rotate.yellow: 1
        rotate.right: -1
        rotate.yellow: 1
        rotate.right: 1
        rotate.yellow: 2
        rotate.right: -1
        rotate.yellow: 2
    else:
        rotate.yellow: 1
        rotate.right: 1
        rotate.yellow: 1
        rotate.right: -1
        rotate.yellow: 1
        rotate.right: 1
        rotate.yellow: 2
        rotate.right: -1
        rotate.yellow: 2
//green + orange
if(color.green.edges.yellow.pos != color.green.pos):
    rotate.yellow: 2
    rotate.right: 1
    rotate.yellow: 1
    rotate.right: -1
    rotate.yellow: 1
    rotate.right: 1
    rotate.yellow: 2
    rotate.right: -1
    rotate.yellow: -1





